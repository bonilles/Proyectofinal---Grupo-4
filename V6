

Algoritmo Celular2
	
	Definir apps, agenda, DatosCompletos, AccionesAgenda, DatosContacto, AsignarNombre, AsignarTelefono como caracter;
	Definir Principal, agregado, NomExiste, ArregloValidarContacto, Menu, Seleccion, Vacio, EspacioDisponible, disponible, Volver, regresar como entero;
	Principal=0; Agregado=0; Disponible=0;

	Dimension Agenda[10,2];
	Dimension Apps[6];
	Dimension DatosContacto[1,2];
	Dimension ArregloValidarContacto[1,2];
	Dimension EspacioDisponible[1];
	Dimension Volver[1];
	
	
	Apps[0]="Whatsapp";
	Apps[1]="Facebook";
	Apps[2]="Agenda";
	Apps[3]="Marcador";
	Apps[4]="Mi banco";
	Apps[5]="Instagram";
	
	Agenda[0,0] = "ESTEBAN";			Agenda[0,1]="83547509";
	Agenda[1,0] = "ALLAN";					Agenda[1,1]="num";
	Agenda[2,0] = "tavo";					Agenda[2,1]="num";
	Agenda[3,0] = "bianchi";					Agenda[3,1]="num";
	Agenda[4,0] = "vera";					Agenda[4,1]="num";
	Agenda[5,0] = "Julio";					Agenda[5,1]="num";
	Agenda[6,0] = "hola";					Agenda[6,1]="num";
	Agenda[7,0] = "";					Agenda[7,1]="";
	Agenda[8,0] = "";					Agenda[8,1]="";
	Agenda[9,0] = "";					Agenda[9,1]="";	
	
	Agenda[0,0] = Mayusculas(Agenda[0,0]);			Agenda[0,1] = Mayusculas(Agenda[0,1]);
	Agenda[1,0] = Mayusculas(Agenda[1,0]);			Agenda[1,1] = Mayusculas(Agenda[1,1]);
	Agenda[2,0] = Mayusculas(Agenda[2,0]);			Agenda[2,1] = Mayusculas(Agenda[2,1]);
	Agenda[3,0] = Mayusculas(Agenda[3,0]);			Agenda[3,1] = Mayusculas(Agenda[3,1]);
	Agenda[4,0] = Mayusculas(Agenda[4,0]);			Agenda[4,1] = Mayusculas(Agenda[4,1]);
	Agenda[5,0] = Mayusculas(Agenda[5,0]);			Agenda[5,1] = Mayusculas(Agenda[5,1]);
	Agenda[6,0] = Mayusculas(Agenda[6,0]);			Agenda[6,1] = Mayusculas(Agenda[6,1]);
	Agenda[7,0] = Mayusculas(Agenda[7,0]);			Agenda[7,1] = Mayusculas(Agenda[7,1]);
	Agenda[8,0] = Mayusculas(Agenda[8,0]);			Agenda[8,1] = Mayusculas(Agenda[8,1]);
	Agenda[9,0] = Mayusculas(Agenda[9,0]);			Agenda[9,1] = Mayusculas(Agenda[9,1]);	
	
	Principal <- MenuPrincipal ();
	
	
	
	Segun principal
		1: AccionesAgenda <- MenuAcciones (); //Agregar contacto
			si AccionesAgenda="A" Entonces
				DatosCompletos <- SolicitarDatosContacto (DatosContacto);
				Regresar <- ValidarContacto (agenda, DatosContacto, ArregloValidarContacto, volver, principal, EspacioDisponible, datoscompletos, Disponible);
				Si ArregloValidarContacto[0,0]=0 o ArregloValidarContacto[0,1]=0
					Disponible <- PocisionVacia (agenda, datoscontacto, EspacioDisponible);
					si EspacioDisponible[0]=0 Entonces				
						imprimir "No hay espacio disponible en la agenda";
					FinSi
					si EspacioDisponible[0]>0 Entonces		
						Imprimir "Contacto guardado, quedan " +ConvertirATexto(EspacioDisponible[0]) + " espacios disponibles en la agenda: ";						
					FinSi
				FinSi
			FinSi
			
		2:
		3:
		4:
		5:
			
		
	FinSegun
	
	
FinAlgoritmo

////////////////////////////////////////////////////////////////
//Menú  principal
SubAlgoritmo Principal <- MenuPrincipal ()
	Definir Principal Como entero;
	Imprimir "-------- MENÚ PRINCIPAL DEL DISPOSITIVO --------";
	Imprimir "";
	Imprimir "Digite una opción del menú:";
	Imprimir "";
	Imprimir "1. Ver opciones de agenda";
	Imprimir "2. Acceder al chat";
	Imprimir "3. Realizar llamada";
	Imprimir "4. Abrir una aplicación";
	Imprimir "5. Apagar el dispositivo";
	Leer Principal;
Fin SubAlgoritmo



////////////////////////////////////////////////////////////////
//Menú  de acciones
SubAlgoritmo AccionesAgenda <- MenuAcciones ()
	Definir AccionesAgenda como caracter;
	Imprimir "Seleccionar una opción";
	Imprimir "";
	Imprimir "A. Agregar un contacto";
	Imprimir "B. Modificar un contacto";
	Imprimir "C. Eliminar un contacto";
	Imprimir "D. Buscar un contacto";
	Imprimir "E. Salir de la agenda";
	Leer AccionesAgenda;
	AccionesAgenda=Mayusculas(AccionesAgenda);

	
Fin SubAlgoritmo

////////////////////////////////////////////////////////////////
//Menú para volver
SubAlgoritmo Cerrar <- SubMenu (Volver, principal, agenda, DatosContacto, ArregloValidarContacto, EspacioDisponible, AccionesAgenda, DatosCompletos, Regresar, Disponible )
	si volver[0]=1 Entonces
		Imprimir "Ha seleccionado 1";
		DatosCompletos <- SolicitarDatosContacto (DatosContacto);
		Regresar <- ValidarContacto (agenda, DatosContacto, ArregloValidarContacto, volver, principal, EspacioDisponible, datoscompletos, Disponible);
		Si ArregloValidarContacto[0,0]=0 o ArregloValidarContacto[0,1]=0
			Disponible <- PocisionVacia (agenda, datoscontacto, EspacioDisponible);
			si EspacioDisponible[0]=0 Entonces				
				imprimir "No hay espacio disponible en la agenda";
			FinSi
			si EspacioDisponible[0]>0 Entonces		
				Imprimir "Contacto guardado, quedan " +ConvertirATexto(EspacioDisponible[0]) + " espacios disponibles en la agenda: ";					
			FinSi
		FinSi
	FinSi
	Si volver[0]=2 Entonces
		Principal <- MenuPrincipal ();
	FinSi
Fin SubAlgoritmo

////////////////////////////////////////////////////////////////
//Solicitar datos de contacto
SubAlgoritmo DatosCompletos <- SolicitarDatosContacto (DatosContacto)
	Definir DatosCompletos, nombre, telefono Como Caracter;
	Datoscompletos=""; Nombre=""; telefono="";	
	DatosContacto[0,0]=""; DatosContacto[0,1]="";
	Imprimir "Digite el nombre del contacto que desea guardar";
	Leer Nombre;
	Nombre=Mayusculas(Nombre);
	Imprimir "Digite el número de telefono";
	Leer telefono;
	Imprimir "";
	Mientras nombre="" o telefono="" hacer
		Imprimir "";
		Imprimir "**Ambos espacios son requeridos, intente nuevamente**";
		Imprimir "Digite el nombre del contacto que desea guardar";
		Leer Nombre;
		Nombre=mayusculas(Nombre);
		Imprimir "Digite el número de telefono";
		Leer telefono;		
	FinMientras
	DatosCompletos="Completos";
	DatosContacto[0,0]=Nombre; DatosContacto[0,1]=Telefono;
	DatosContacto[0,0]= Mayusculas(DatosContacto[0,0]);
Fin SubAlgoritmo

////////////////////////////////////////////////////////////////
//Validar si ya existe
SubAlgoritmo Regresar <- ValidarContacto (agenda, DatosContacto, ArregloValidarContacto, volver, principal, EspacioDisponible, datoscompletos, Disponible)
	Definir i, j,  NomExiste, TelExiste, Regresar, AccionesAgenda, cerrar como entero;	
	i=0; j=0; NomExiste=0; TelExiste=0; ArregloValidarContacto[0,0]=0; Regresar=0; AccionesAgenda=0; cerrar=0;
	para i=0 hasta 9 con paso 1
		para j=0 hasta 1 con paso 1
			si DatosContacto[0,0] = agenda[i,j]
				NomExiste = 1;
			FinSi
			si DatosContacto[0,1] = agenda[i,j]
				TelExiste =1;
			FinSi
		FinPara
	FinPara
	ArregloValidarContacto[0,0]=NomExiste;
	ArregloValidarContacto[0,1]=TelExiste;
	
	si ArregloValidarContacto[0,0]=1 Entonces
		Imprimir "";
		Imprimir "El nombre ya existe dentro de sus contactos, utilice un nombre diferente";	
		Imprimir "";
		Imprimir "Seleccione una opción";
		Imprimir "1. Agregar otro contacto";
		Imprimir "2. Volver al menú principal";
		Leer Regresar;
		Volver[0]=Regresar;
		Cerrar <- SubMenu (Volver, principal, agenda, DatosContacto, ArregloValidarContacto, EspacioDisponible, AccionesAgenda, DatosCompletos, Regresar, Disponible );
	FinSi
	si ArregloValidarContacto[0,1]=1 Entonces
		Imprimir "";
		Imprimir "El número ingresado ya está asignado a alguno de sus contactos, utilice un número diferente";					
	FinSi
Fin SubAlgoritmo

////////////////////////////////////////////////////////////////
//Validar si ya existe
SubAlgoritmo Disponible <- PocisionVacia (agenda, datoscontacto, EspacioDisponible)
	Definir i, j, disponible como entero;
	i=0; j=0; Disponible=0;
	
	Para i=0 Hasta 9 Con Paso 1 Hacer
		Para j=0 Hasta 1 Con Paso 1 Hacer
			si Agenda[i,j]="" Entonces
				Disponible=Disponible+1;
			FinSi
			si Agenda[i,j]="" Entonces
				Agenda[i,j]=DatosContacto[0,0];
				j=j+1;
				Agenda[i,j]=DatosContacto[0,1];
				
			FinSi
			
		Fin Para
	Fin Para
	EspacioDisponible[0]=Disponible-1;
Fin SubAlgoritmo
